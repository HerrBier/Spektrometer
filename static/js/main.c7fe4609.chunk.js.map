{"version":3,"sources":["Skala.svg","Efeld.svg","Simulation.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Simulation","props","magnetfeldZeichenAbstandFilter","Math","sqrt","Bf","magnetfeldZeichenAbstandAnalysator","Ba","efeldZeichenAbstand","ceil","Ef","className","particles","map","p","i","key","style","left","x","top","y","backgroundColor","t","Array","e","margin","marginRight","marginLeft","src","efeldsvg","alt","skala","App","useState","active","setActive","time","setTime","setParticles","setEf","setBf","setBa","useEffect","interval","setInterval","m","r","random","concat","vx","vy","passedFilter","forEach","filter","_p","j","len","B","E","fa","ax","ay","clearInterval","type","min","max","step","value","onChange","target","toPrecision","onClick","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c7fe4609.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Skala.8349afd1.svg\";","module.exports = __webpack_public_path__ + \"static/media/Efeld.7d33396d.svg\";","import React from 'react'\r\nimport skala from './Skala.svg'\r\nimport efeldsvg from './Efeld.svg'\r\n\r\nexport default function Simulation(props) {\r\n  let magnetfeldZeichenAbstandFilter = 3 / Math.sqrt(props.Bf)\r\n  let magnetfeldZeichenAbstandAnalysator = 3 / Math.sqrt(props.Ba)\r\n  let efeldZeichenAbstand = Math.ceil(5 /Math.sqrt(props.Ef))\r\n\r\n  return (\r\n    <div className=\"ms-simulation\">\r\n      {props.particles.map((p, i) => (\r\n        <div\r\n          key={i}\r\n          className=\"point\"\r\n          style={{\r\n            left: p.x,\r\n            top: p.y,\r\n            backgroundColor: p.t\r\n          }}\r\n        ></div>\r\n      ))}\r\n      <div className=\"blendeOben\"></div>\r\n      <div className=\"blendeUnten\"></div>\r\n      {props.Bf > 0 && (\r\n        <div className=\"magnetfeldZeichen\">\r\n          {[...Array(300)].map((e, i) => (\r\n            <div\r\n              key={i}\r\n              style={{\r\n                margin: magnetfeldZeichenAbstandFilter\r\n              }}\r\n            ></div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {props.Ef > 0 && (\r\n        <div className=\"efeldZeichen\">\r\n          {[...Array(30)].map((e, i) => (\r\n            <div\r\n              key={i}\r\n              style={{\r\n                marginRight: efeldZeichenAbstand,\r\n                marginLeft: efeldZeichenAbstand,\r\n              }}\r\n            ><img src={efeldsvg} alt=\"\"/></div>\r\n          ))}\r\n        </div>\r\n      )}\r\n      <div className=\"kondensator kondensatorOben\"></div>\r\n      <div className=\"kondensator kondensatorUnten\"></div>\r\n      <div className=\"ionenQuelle\"></div>\r\n\r\n      <div className=\"blendeUnten blendeAnalysatorUnten \"></div>\r\n      <div className=\"schirm\"></div>\r\n      <div className=\"skala\">\r\n        <img src={skala} alt=\"Skala\" />\r\n      </div>\r\n      <div className=\"analysator\">\r\n        {props.Ba > 0 && (\r\n          <div className=\"magnetfeldZeichen\">\r\n            {[...Array(500)].map((e, i) => (\r\n              <div\r\n                key={i}\r\n                style={{\r\n                  margin: magnetfeldZeichenAbstandAnalysator\r\n                }}\r\n              ></div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\nimport Simulation from './Simulation'\nimport './App.css'\n\nfunction App() {\n  const [active, setActive] = useState(false)\n  const [time, setTime] = useState(0)\n  const [particles, setParticles] = useState([])\n  const [Ef, setEf] = useState(0)\n  const [Bf, setBf] = useState(0)\n  const [Ba, setBa] = useState(0)\n\n  const reset = () => {\n    setParticles([])\n  }\n\n  useEffect(() => {\n    reset()\n  }, [Ef, Bf, Ba])\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (!active) return\n      setTime(time => time + 1)\n      if (time % 8 === 0) {\n        let m\n        let t\n        let r = Math.random()\n        if (r < 0.4) {\n          m = 1.23457\n          t = 'gray'\n        } else if (r < 0.8) {\n          m = 0.6\n          t = 'orange'\n        } else if (r < 1) {\n          m = 2.5\n          t = 'black'\n        }\n        setParticles(\n          particles.concat({\n            x: -40,\n            y: 150,\n            vx: 2 + 1.2 * (Math.random() - 0.5),\n            vy: 0,\n            m: m,\n            t: t,\n            passedFilter: false\n          })\n        )\n      }\n\n      particles.forEach((p, i) => {\n        if (\n          p.passedFilter &&\n          p.x > 600 &&\n          p.x < 650 &&\n          (p.y < 145 || p.y > 155)\n        ) {\n          return\n        }\n\n        if (p.x > 660) p.passedFilter = true\n\n        if (\n          (p.x < 600 && (p.y > 300 || p.y < 0)) ||\n          (p.x > 600 && p.x < 650 && (p.y < 145 || p.y > 155)) ||\n          p.x > 1000\n        ) {\n          setParticles(\n            particles.filter((_p, j) => {\n              return i !== j\n            })\n          )\n        }\n\n        let len = Math.sqrt(p.vx * p.vx + p.vy * p.vy)\n        let x = p.vx / len\n        let y = p.vy / len\n        let B = 0\n        let E = 0\n\n        if (p.x >= 0 && p.x < 600) {\n          //B =  0.005\n          B = Bf\n          //E =  0.01\n          E = Ef\n        } else if (p.x > 650) {\n          B = Ba\n          E = 0\n        }\n        let fa = (+len * B) / p.m\n\n        let ax = y * fa\n        let ay = -x * fa\n\n        p.vx += ax\n        p.vy += ay\n        p.vy += E / p.m\n        p.x += p.vx\n        p.y += p.vy\n      })\n    }, 7)\n    return () => clearInterval(interval)\n  }, [particles, time, Bf, Ef, active, Ba])\n\n  return (\n    <>\n      <Simulation\n        time={time}\n        particles={particles}\n        Bf={Bf}\n        Ba={Ba}\n        Ef={Ef}\n      ></Simulation>\n      <div className=\"settingFilter setting\">\n        <input\n          type=\"range\"\n          min=\"0\"\n          max=\"0.01\"\n          step=\"0.001\"\n          value={Ef}\n          onChange={e => setEf(e.target.value)}\n        ></input>\n        {'\\\\( E_F = \\\\)'} {(Ef * 100).toPrecision(1)} {' \\\\( \\\\frac{V}{m} \\\\)'}\n        <br />{' '}\n        <input\n          type=\"range\"\n          min=\"0\"\n          max=\"0.01\"\n          step=\"0.001\"\n          value={Bf}\n          onChange={e => setBf(e.target.value)}\n        ></input>\n        {'\\\\( B_F = \\\\)'} {Bf} {' \\\\( T \\\\)'}\n      </div>\n      <div className=\"settingAnalysator setting\">\n      <input\n        type=\"range\"\n        min=\"0\"\n        max=\"0.05\"\n        step=\"0.005\"\n        value={Ba}\n        onChange={e => setBa(e.target.value)}\n      ></input>\n      {'\\\\( B_A = \\\\)'} {Ba} {' \\\\( T \\\\)'}\n      </div>\n      <div className=\"controls\">\n        <h1>Massenspektrometer</h1>\n        <input\n          type=\"button\"\n          onClick={() => setActive(!active)}\n          value={!active ? 'Start' : 'Stop'}\n        ></input>\n        <input\n          type=\"button\"\n          onClick={() => setParticles([])}\n          value=\"Zurücksetzen\"\n        ></input>\n      </div>\n    </>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}